{"ast":null,"code":"import React,{useState,useEffect}from'react';import RecordRTC from'recordrtc';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const RecordAudio=()=>{const[isRecording,setIsRecording]=useState(false);const[audioBlob,setAudioBlob]=useState(null);const[recordRTC,setRecordRTC]=useState(null);const[recordRTCstate,setRecordRTCstate]=useState(null);useEffect(()=>{const initRecordRTC=async()=>{try{const stream=await navigator.mediaDevices.getUserMedia({audio:true});const recorder=RecordRTC(stream,{type:'audio',mimeType:'audio/wav',recorderType:RecordRTC.StereoAudioRecorder,numberOfAudioChannels:1});setRecordRTC(recorder);}catch(error){console.error('Error accessing microphone:',error);}};initRecordRTC();},[]);const startRecording=()=>{if(recordRTC){recordRTC.startRecording();setIsRecording(true);}};const stopRecording=()=>{if(recordRTC){recordRTC.stopRecording(()=>{const blob=recordRTC.getBlob();setAudioBlob(blob);setIsRecording(false);});}setRecordRTCstate(recordRTCstate+1);location.reload();};const saveRecording=()=>{if(audioBlob){const url=URL.createObjectURL(audioBlob);const a=document.createElement('a');document.body.appendChild(a);a.style='display: none';a.href=url;a.download='recordedAudio.wav';a.click();window.URL.revokeObjectURL(url);}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"button\",{onClick:startRecording,disabled:isRecording,children:\"Start Recording\"}),/*#__PURE__*/_jsx(\"button\",{onClick:stopRecording,disabled:!isRecording,children:\"Stop Recording\"}),/*#__PURE__*/_jsx(\"button\",{onClick:saveRecording,disabled:!audioBlob,children:\"Save Recording\"}),audioBlob&&/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"audio\",{controls:true,children:/*#__PURE__*/_jsx(\"source\",{src:URL.createObjectURL(audioBlob),type:\"audio/wav\"})})})]});};export default RecordAudio;","map":{"version":3,"names":["React","useState","useEffect","RecordRTC","jsx","_jsx","jsxs","_jsxs","RecordAudio","isRecording","setIsRecording","audioBlob","setAudioBlob","recordRTC","setRecordRTC","recordRTCstate","setRecordRTCstate","initRecordRTC","stream","navigator","mediaDevices","getUserMedia","audio","recorder","type","mimeType","recorderType","StereoAudioRecorder","numberOfAudioChannels","error","console","startRecording","stopRecording","blob","getBlob","location","reload","saveRecording","url","URL","createObjectURL","a","document","createElement","body","appendChild","style","href","download","click","window","revokeObjectURL","children","onClick","disabled","controls","src"],"sources":["/home/mayur/stat_code/audio-collection-tools/stryker-campaign-frontend/src/components/records.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport RecordRTC from 'recordrtc';\n\nconst RecordAudio = () => {\n  const [isRecording, setIsRecording] = useState(false);\n  const [audioBlob, setAudioBlob] = useState(null);\n  const [recordRTC, setRecordRTC] = useState(null);\n  const [recordRTCstate, setRecordRTCstate] = useState(null);\n\n\n\n  useEffect(() => {\n    const initRecordRTC = async () => {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n        const recorder = RecordRTC(stream, {\n          type: 'audio',\n          mimeType: 'audio/wav',\n          recorderType: RecordRTC.StereoAudioRecorder,\n          numberOfAudioChannels: 1,\n        });\n        setRecordRTC(recorder);\n      } catch (error) {\n        console.error('Error accessing microphone:', error);\n      }\n    };\n\n    initRecordRTC();\n  }, []);\n\n  const startRecording = () => {\n    if (recordRTC) {\n      recordRTC.startRecording();\n      setIsRecording(true);\n    }\n  };\n\n  const stopRecording = () => {\n\n    if (recordRTC) {\n      recordRTC.stopRecording(() => {\n        const blob = recordRTC.getBlob();\n        setAudioBlob(blob);\n        setIsRecording(false);\n      });\n    }\n\n    setRecordRTCstate(recordRTCstate + 1)\n    location.reload()\n  };\n\n  const saveRecording = () => {\n    if (audioBlob) {\n      const url = URL.createObjectURL(audioBlob);\n      const a = document.createElement('a');\n      document.body.appendChild(a);\n      a.style = 'display: none';\n      a.href = url;\n      a.download = 'recordedAudio.wav';\n      a.click();\n      window.URL.revokeObjectURL(url);\n    }\n  };\n\n  return (\n    <div>\n      <button onClick={startRecording} disabled={isRecording}>\n        Start Recording\n      </button>\n      <button onClick={stopRecording} disabled={!isRecording}>\n        Stop Recording\n      </button>\n      <button onClick={saveRecording} disabled={!audioBlob}>\n        Save Recording\n      </button>\n      {audioBlob && (\n        <div>\n          <audio controls>\n            <source src={URL.createObjectURL(audioBlob)} type=\"audio/wav\" />\n          </audio>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default RecordAudio;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}