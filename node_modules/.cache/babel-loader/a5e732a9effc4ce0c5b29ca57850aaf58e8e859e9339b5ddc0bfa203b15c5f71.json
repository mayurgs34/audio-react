{"ast":null,"code":"var _jsxFileName = \"/home/mayur/stat_code/audio-collection-tools/stryker-campaign-frontend/src/components/Screen3.js\",\n  _s = $RefreshSig$();\n//\n//  Node.js v18.18.0 npm 10.2.1\n//  File: Screen3.js\n//  Author: Mayur Chavan (GSLab Pvt. Ltd. Pune)\n//  Date: 2023-11-21 18:49:59\n//  Functionality: Launch the stryker's audio data capturing tool application UI.\n//\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { ButtonGroup, Paper, Button, Typography, styled, Box, Modal } from \"@mui/material\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { isMobile, browserVersion } from 'react-device-detect';\nimport MicNoneIcon from \"@mui/icons-material/MicNone\";\nimport CheckBoxOutlineBlankIcon from \"@mui/icons-material/CheckBoxOutlineBlank\";\nimport DoneIcon from \"@mui/icons-material/Done\";\nimport axios from \"axios\";\nimport platform from \"platform\";\nimport RecordRTC from 'recordrtc';\nimport { useLocation } from \"react-router-dom\";\nimport data_file from \"../assets/files/config.json\";\nimport Progressbar_desktop from \"./Progressbar_desktop\";\nimport Progressbar_mobile from \"./Progressbar_mobile\";\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Screen3() {\n  _s();\n  /*\n    Screen3\n    ~~~~~~~~~~~~~~~~~\n    \n    This Component displays all phrase with record button.\n  */\n  const navigate = useNavigate();\n  const [phraseList, setphraseList] = useState([]);\n  const [name, setName] = useState(\"\");\n  const [timerState, settimerState] = useState(\"\");\n  const [timerBtnClick, settimerBtnClick] = useState(0);\n  const stopRef = useRef(null);\n  const [isRecording, setIsRecording] = useState(false);\n  const [audioBlob, setAudioBlob] = useState(null);\n  const [recordRTC, setRecordRTC] = useState(null);\n  const [initialCount, setInitialCount] = useState(null);\n  const [nextcount, setNextCount] = useState(null);\n  const [fetchNextLoop, setFetchNextLoop] = useState(0);\n  const [thankyouBtnPos, setthankyouBtnPos] = useState(0);\n  const location = useLocation();\n  const params = useParams();\n  const [streamState, setStreamState] = useState(null);\n  const [Tokenopen, setTokenopen] = useState(false);\n  const [freeze, setfreeze] = useState(false);\n  const [progressbarText, setprogressbarText] = useState(\"Lets Go!\");\n\n  // style for ms token error message\n  const ms_style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    bgcolor: 'background.paper',\n    border: '2px solid #e74c3c',\n    boxShadow: 24,\n    pt: 2,\n    px: 4,\n    pb: 3\n  };\n\n  // record RTC variable for recording audio \n  const initRecordRTC = async () => {\n    var params = {\n      audio: true,\n      video: false\n    };\n    await navigator.mediaDevices.getUserMedia(params).then(stream => {\n      setStreamState(stream);\n      console.log('Got the stream - ', stream);\n      const recorder = RecordRTC(stream, {\n        type: 'audio',\n        mimeType: 'audio/wav',\n        recorderType: RecordRTC.StereoAudioRecorder,\n        numberOfAudioChannels: 1\n        //sampleRate: 44100\n      });\n\n      setRecordRTC(recorder);\n    });\n  };\n\n  // On initial load\n  useEffect(() => {\n    // clear previous screen load VCXP-18045\n    localStorage.removeItem(\"S2_firstLoadDone\");\n\n    // Set initial and next count for showing Recording blocks\n    setInitialCount(0);\n    setNextCount(5);\n\n    // Initialize record RTC for recording audio \n    initRecordRTC();\n\n    // Check campaign key is available in config file \n    // else navigate to 404 page\n    let path_list = location.pathname.split(\"/\");\n    let camp_val = \"\";\n    for (let i = 0; i < path_list.length; i++) {\n      if (data_file.hasOwnProperty(path_list[i])) {\n        camp_val = path_list[i];\n      }\n    }\n    if (camp_val == \"\") {\n      navigate(\"/404\");\n    }\n\n    // On Refresh navigate to screen1 \n    if (localStorage.getItem('S3_firstLoadDone') === null) {\n      // If it's the first load, set the flag in local storage to true and reload the page\n      localStorage.setItem('S3_firstLoadDone', 1);\n      console.log('This is the initial load');\n    } else {\n      let s3Ref = localStorage.getItem(\"S3_firstLoadDone\");\n      localStorage.setItem(\"S3_firstLoadDone\", parseInt(s3Ref) + 1);\n      s3Ref = localStorage.getItem(\"S3_firstLoadDone\");\n      if (s3Ref == 3) {\n        localStorage.clear();\n        console.log('This is a page refresh');\n        if (recordRTC) {\n          recordRTC.destroy();\n        }\n        navigate(\"/\" + params.userId);\n      }\n    }\n\n    // check session id present in local storage\n    // if not present navigate to screen1 page\n    const check_session = localStorage.getItem('vct_session_id');\n    if (check_session == null) {\n      if (recordRTC) {\n        recordRTC.destroy();\n      }\n      // navigate(\"/\" + params.userId)\n    }\n\n    // Set the browser name\n    setName(platform.name);\n\n    // Get Phrase list from loal storage\n    let phrase_fetched = [];\n    try {\n      if (localStorage.getItem(\"vct_phrase_list\") !== undefined) {\n        phrase_fetched = JSON.parse(localStorage.getItem(\"vct_phrase_list\"));\n      } else {\n        for (let i = 0; i < 50; i++) {\n          phrase_fetched.push(\"\");\n        }\n      }\n\n      // Create list of object for each phrase\n      // Object containing values for displaying and hiding the view\n      if (localStorage.getItem(\"vct_phrase_list\") !== undefined) {\n        //Runs only on the first render\n        for (let i = 0; i < 50; i++) {\n          if (i === 0) {\n            phraseList.push({\n              recordButtonDisplay: \"\",\n              stopButtonDisplay: \"none\",\n              readyGreenTextDisplay: \"\",\n              recordingRedTextDisplay: \"none\",\n              recordBoxDisplay: \"inline-block\",\n              completedBoxDisplay: \"none\",\n              phraseBoxDisplay: \"none\",\n              phraseText: phrase_fetched[i],\n              prevRecorded: false,\n              blobUrldata: \"\",\n              box_no: i\n            });\n          } else {\n            phraseList.push({\n              recordButtonDisplay: \"none\",\n              stopButtonDisplay: \"none\",\n              readyGreenTextDisplay: \"none\",\n              recordingRedTextDisplay: \"none\",\n              recordBoxDisplay: \"none\",\n              completedBoxDisplay: \"none\",\n              phraseBoxDisplay: \"\",\n              phraseText: phrase_fetched[i],\n              prevRecorded: false,\n              blobUrldata: \"\",\n              box_no: i\n            });\n          }\n        }\n      }\n\n      // set state of phraselist\n      setphraseList([...phraseList, phraseList]);\n    } catch (err) {\n      // handle exception\n      console.error(\"An error occurred:\", err);\n    }\n\n    // Get no_of_phrases from local storage\n    // Set thank you button position  \n    setthankyouBtnPos(parseInt(localStorage.getItem(\"no_of_phrases\")));\n\n    // set timer for token \n    const interval = setInterval(() => {\n      setTokenopen(true);\n    }, 1200000); //20*60 = 1200s =1200000ms\n    return () => clearInterval(interval);\n  }, []);\n\n  // CSS styling for button\n  const BlueButton = styled(Button)(({\n    theme\n  }) => ({\n    // backgroundColor: theme.palette.primary.main,\n    backgroundColor: \"#ffb500\",\n    padding: \"10px 15px\",\n    color: \"black\",\n    borderRadius: 40,\n    fontSize: 16,\n    fontWeight: 600,\n    boxShadow: \"0px 4px 16px 0px rgba(0, 0, 0, 0.16)\",\n    textTransform: \"capitalize\",\n    \"&:hover\": {\n      backgroundColor: \"#F79F1F\"\n    },\n    \"&:disabled\": {\n      backgroundColor: \"gray\",\n      color: \"white\"\n    }\n  }));\n\n  // \n  React.useEffect(() => {\n    function strFormat(strIdx) {\n      var strVal = JSON.parse(localStorage.getItem(\"vct_phrase_list\"));\n      strVal = strVal[strIdx].replace(/[^a-zA-Z0-9 ]/g, \"\");\n      strVal = strVal.replace(/ /g, \"_\");\n      return strIdx + 1 + \"_\" + strVal;\n    }\n    async function uploadVoice() {\n      // get curr idx, phrase\n      const box_no1 = timerBtnClick;\n      let url;\n      if (audioBlob) {\n        url = URL.createObjectURL(audioBlob);\n      }\n\n      // store blob in blobval key in object\n      const new_data = phraseList.map(item => item.box_no === box_no1 ? {\n        ...item,\n        blobUrldata: url\n      } : item);\n      setphraseList(new_data);\n      const audioBlob1 = await fetch(url).then(r => r.blob());\n      const audiofile = new File([audioBlob1], \"audiofile.mp3\", {\n        type: \"audio/mpeg\"\n      });\n      const formData = new FormData();\n      formData.append(\"audio_data\", audiofile);\n      await axios.post(process.env.REACT_APP_API_IP + \"/api/v1/campaign/\" +\n      // \"https://stryker-audio-collection-api.tools.np.vocera.io/api/v1/campaign/\" +\n      localStorage.getItem(\"vct_campaign\") + \"/\" + localStorage.getItem(\"vct_session_id\") + \"/audiofile?phrase_str=\" + strFormat(box_no1), formData, {\n        headers: {\n          \"content-type\": \"multipart/form-data\",\n          'Access-Control-Allow-Origin': '*',\n          'Access-Control-Allow-Methods': 'POST, PUT, PATCH, GET, DELETE, OPTIONS',\n          'Access-Control-Allow-Headers': '*',\n          'Access-Control-Allow-Credentials': true,\n          'Authorization': `Bearer ${localStorage.getItem(\"vct_token\")}`\n        }\n      }).then(function (response) {\n        console.log(response);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n    if (audioBlob) {\n      uploadVoice();\n    }\n  }, [audioBlob]);\n  const handleProgressbar = count_val => {\n    // set progress bar text\n    const pb_text = [\"Lets Go!\", \"Good Going!\", \"Excellent!\", \"Nearly There!\", \"Last 10 to go!\", \"Done!\"];\n    if (parseInt(count_val) >= 0 && parseInt(count_val) < 10) {\n      setprogressbarText(pb_text[0]); //Lets Go!\n    }\n\n    if (parseInt(count_val) >= 10 && parseInt(count_val) < 20) {\n      setprogressbarText(pb_text[1]); //Good Going!\n    }\n\n    if (parseInt(count_val) >= 20 && parseInt(count_val) < 30) {\n      setprogressbarText(pb_text[2]); //Excellent!\n    }\n\n    if (parseInt(count_val) >= 30 && parseInt(count_val) < 40) {\n      setprogressbarText(pb_text[3]); //Nearly There!\n    }\n\n    if (parseInt(count_val) >= 40 && parseInt(count_val) < 49) {\n      setprogressbarText(pb_text[4]); //Last 10 to go!\n    }\n\n    if (parseInt(count_val) === 49) {\n      setprogressbarText(pb_text[5]); //Done!\n    }\n  };\n\n  // start recording\n  const handleRecordClick = e => {\n    // console.log(timerBtnClick)\n\n    if (recordRTC) {\n      recordRTC.reset();\n    }\n    localStorage.setItem(\"vct_curr_box\", e.target.id);\n    const new_data = phraseList.map(item => item.box_no === parseInt(e.target.id) ? {\n      ...item,\n      recordButtonDisplay: \"none\",\n      stopButtonDisplay: \"\",\n      readyGreenTextDisplay: \"none\",\n      recordingRedTextDisplay: \"flex\"\n    } : item);\n    if (parseInt(e.target.id) >= 1) {\n      const prev_data = new_data.map(item => item.box_no === parseInt(e.target.id) - 1 ? {\n        ...item,\n        recordBoxDisplay: \"none\",\n        completedBoxDisplay: \"none\"\n      } : item);\n      setphraseList(prev_data);\n    } else {\n      setphraseList(new_data);\n    }\n\n    // startRecording();\n    if (recordRTC) {\n      recordRTC.startRecording();\n      setIsRecording(true);\n    }\n    const timerID = setTimeout(() => {\n      stopRef.current.click();\n    }, 10000); //miliseconds\n\n    settimerState(timerID);\n    // get id (int of block)\n    settimerBtnClick(parseInt(e.target.id));\n\n    // Progress bar count\n    handleProgressbar(parseInt(e.target.id));\n  };\n\n  // stop recording\n  async function handleStopClick(e) {\n    setFetchNextLoop(timerBtnClick + 1);\n    // console.log('firstTime - ', fetchNextLoop)\n    if (timerBtnClick - timerBtnClick % 4 !== initialCount) {\n      if (timerBtnClick === nextcount) {\n        setInitialCount(initialCount);\n        setNextCount(nextcount);\n      } else {\n        if (timerBtnClick !== initialCount) {\n          if ((timerBtnClick + 1) % 5 == 0) {\n            setInitialCount(initialCount + 4);\n            setNextCount(nextcount + 5);\n          }\n        }\n      }\n    }\n    clearTimeout(timerState);\n\n    // If First phrase send metadata json\n    if (timerBtnClick === 0) {\n      const data = {\n        campaign_name: params.userId,\n        accent: localStorage.getItem(\"vct_accent_value\"),\n        session_id: localStorage.getItem(\"vct_session_id\"),\n        timestamp: localStorage.getItem(\"vct_curr_date\") + \" \" + localStorage.getItem(\"vct_curr_time\"),\n        browser: name,\n        browser_version: browserVersion,\n        device: isMobile ? 'mobile' : 'desktop',\n        ms_token_id: localStorage.getItem(\"vct_ms_token\"),\n        ms_token_title: localStorage.getItem(\"vct_ms_token_title\"),\n        language: \"English\"\n      };\n\n      //1. post meta-json file to server\n      axios.post(process.env.REACT_APP_API_IP + \"/api/v1/campaign/\" +\n      // \"https://stryker-audio-collection-api.tools.np.vocera.io/api/v1/campaign/\" +\n      localStorage.getItem(\"vct_campaign\") + \"/\" + localStorage.getItem(\"vct_session_id\") + \"/metadata\", data, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': '*',\n          'Access-Control-Allow-Methods': 'POST, PUT, PATCH, GET, DELETE, OPTIONS',\n          'Access-Control-Allow-Headers': '*',\n          'Access-Control-Allow-Credentials': true,\n          'Authorization': `Bearer ${localStorage.getItem(\"vct_token\")}`\n        }\n      }).then(function (response) {\n        console.log(response);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n    const new_data1 = phraseList.map(item => item.box_no === timerBtnClick ? {\n      ...item,\n      recordBoxDisplay: \"none\",\n      completedBoxDisplay: \"inline-block\",\n      prevRecorded: true\n    } : item);\n\n    // Until count not moves to last recording box\n    if (timerBtnClick !== 49) {\n      const new_data = new_data1.map(item => item.box_no === timerBtnClick + 1 ? {\n        ...item,\n        recordBoxDisplay: \"inline-block\",\n        recordButtonDisplay: \"\",\n        readyGreenTextDisplay: \"\",\n        phraseBoxDisplay: \"none\"\n      } : item);\n      setphraseList(new_data);\n    } else {\n      setphraseList(new_data1);\n    }\n\n    // stopRecording();\n    if (recordRTC) {\n      recordRTC.stopRecording(() => {\n        const blob = recordRTC.getBlob();\n        setAudioBlob(blob);\n        setIsRecording(false);\n      });\n    }\n    localStorage.setItem(\"vct_curr_box\", timerBtnClick);\n  }\n\n  // retry recording and set CSS of that phrase box\n  const handleRetryClick = e => {\n    settimerBtnClick(parseInt(e.target.id));\n\n    // progress bar count\n    handleProgressbar(parseInt(e.target.id));\n    const new_data = phraseList.map(item => item.box_no === parseInt(e.target.id) ? {\n      ...item,\n      recordBoxDisplay: \"inline-block\",\n      recordButtonDisplay: \"\",\n      stopButtonDisplay: \"none\",\n      readyGreenTextDisplay: \"\",\n      recordingRedTextDisplay: \"none\",\n      completedBoxDisplay: \"none\",\n      phraseBoxDisplay: \"none\"\n    } : item);\n    const next_data = new_data.map(item => item.box_no === parseInt(e.target.id) + 1 ? {\n      ...item,\n      recordBoxDisplay: \"none\",\n      completedBoxDisplay: \"none\",\n      phraseBoxDisplay: \"\"\n    } : item);\n    setphraseList(next_data);\n  };\n\n  // listen recording\n  const handleListenClick = e => {\n    const audio_src = phraseList[parseInt(e.target.id)].blobUrldata;\n    // // const audio_src = phraseList[timerBtnClick].blobUrldata\n    const tmp = new Audio(audio_src);\n    tmp.play();\n  };\n\n  //tokenexpireBtnClick button click gte new bearer token\n  const tokenexpireBtnClick = () => {\n    // when button clicked\n    // hide token error model\n    setTokenopen(false);\n\n    // show circular modal\n    setfreeze(true);\n\n    // API for getting JWT token\n    var tokenurl = process.env.REACT_APP_API_IP + \"/api/v1/campaign/\" +\n    // \"https://stryker-audio-collection-api.tools.np.vocera.io/api/v1/campaign/\" +\n    localStorage.getItem(\"vct_session_id\") + \"/auth\";\n    axios.get(tokenurl, {\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*',\n        'Access-Control-Allow-Methods': 'POST, PUT, PATCH, GET, DELETE, OPTIONS',\n        'Access-Control-Allow-Headers': '*',\n        'Access-Control-Allow-Credentials': true\n      }\n    }).then(response => {\n      // As soon as JWT  token received \n      // extract token and set local storage\n      const posts = response.data;\n      localStorage.setItem(\"vct_token\", posts.token);\n\n      // hide circular model\n      setfreeze(false);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      open: Tokenopen,\n      \"aria-labelledby\": \"parent-modal-title\",\n      \"aria-describedby\": \"parent-modal-description\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          ...ms_style,\n          width: 400\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          id: \"parent-modal-title\",\n          children: \"Error message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 603,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          my: 1,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"parent-modal-description\",\n            children: \"Session Expired. Please click OK button to renew session.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 606,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 605,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: tokenexpireBtnClick,\n          variant: \"outlined\",\n          children: \"OK\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 611,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 602,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 597,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: freeze,\n      \"aria-labelledby\": \"modal-modal-title\",\n      \"aria-describedby\": \"modal-modal-description\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        width: \"100vw\",\n        height: \"100vh\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 626,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 625,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 620,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: {\n          md: \"none\",\n          xs: \"block\"\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        px: 2.5,\n        pt: 2.5,\n        maxWidth: 1370,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/logo1.png\",\n            alt: \"stryker logo\",\n            width: \"114px\",\n            height: \"34px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 636,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 635,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 634,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 631,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: {\n          md: \"block\",\n          xs: \"none\"\n        },\n        boxShadow: \"0px 4px 16px 0px rgba(0, 0, 0, 0.16)\"\n      },\n      bgcolor: \"#ffb500\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        px: 5,\n        py: 2.6,\n        maxWidth: 1370,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/logo1.png\",\n            alt: \"stryker logo\",\n            width: \"148px\",\n            height: \"44px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 648,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 647,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 646,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 642,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      p: 5,\n      maxWidth: 1370,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: {\n            md: \"block\",\n            xs: \"none\"\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          component: \"p\",\n          fontSize: 18,\n          fontWeight: 800,\n          color: \"#ffb500\",\n          children: progressbarText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 656,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Progressbar_desktop, {\n          bar_val: timerBtnClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 659,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 655,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: {\n            md: \"none\",\n            xs: \"block\"\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(Progressbar_mobile, {\n          bar_val: timerBtnClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 664,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          component: \"p\",\n          fontSize: 18,\n          fontWeight: 800,\n          color: \"#ffb500\",\n          children: progressbarText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 665,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 663,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        mt: 5,\n        sx: {\n          display: {\n            md: \"block\",\n            xs: \"none\"\n          }\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          component: \"p\",\n          fontSize: 16,\n          fontWeight: 500,\n          children: [\"Press the record button and say the highlighted phrase. If the phrase contains words that have spaces, please spell the word. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 673,\n            columnNumber: 137\n          }, this), \" For example, \\\"N I C U\\\" should be pronounced letter by letter.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 672,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 671,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        mt: 5,\n        sx: {\n          display: {\n            md: \"none\",\n            xs: \"block\"\n          }\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          textAlign: \"center\",\n          variant: \"body1\",\n          component: \"p\",\n          fontSize: 16,\n          fontWeight: 500,\n          children: [\"Press the record button and say the highlighted phrase. If the phrase contains words that have spaces, please spell the word. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 680,\n            columnNumber: 137\n          }, this), \" For example, \\\"N I C U\\\" should be pronounced letter by letter.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 679,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 678,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        mt: 5,\n        children: (() => {\n          let container = [];\n          for (var i = 0; i < phraseList.length - 1; i++) {\n            container.push( /*#__PURE__*/_jsxDEV(Box, {\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: {\n                    md: \"block\",\n                    xs: \"none\"\n                  }\n                },\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  display: phraseList[i].recordBoxDisplay,\n                  children: /*#__PURE__*/_jsxDEV(Paper, {\n                    sx: {\n                      border: \"0.75px solid #CB9200\",\n                      background: \"rgba(255, 245, 219, 0.50)\",\n                      boxShadow: \"0px 1px 7px 0px rgba(255, 181, 0, 0.15)\"\n                    },\n                    elevation: 2,\n                    children: /*#__PURE__*/_jsxDEV(Box, {\n                      sx: {\n                        display: \"flex\",\n                        alignItems: \"center\"\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(Box, {\n                        px: 5,\n                        py: 2.3,\n                        children: [/*#__PURE__*/_jsxDEV(Typography, {\n                          variant: \"h6\",\n                          component: \"p\",\n                          fontSize: 16,\n                          fontWeight: 600,\n                          children: phraseList[i].phraseText\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 698,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                          sx: {\n                            marginTop: \"10px\"\n                          },\n                          display: phraseList[i].readyGreenTextDisplay,\n                          variant: \"body1\",\n                          component: \"p\",\n                          color: \"green\",\n                          fontSize: 14,\n                          fontWeight: 600,\n                          children: \"Ready to record!\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 702,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(Box, {\n                          sx: {\n                            marginTop: \"10px\",\n                            display: phraseList[i].recordingRedTextDisplay,\n                            alignItems: \"center\"\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(Typography, {\n                            variant: \"body1\",\n                            component: \"p\",\n                            color: \"red\",\n                            fontSize: 14,\n                            fontWeight: 600,\n                            children: \"Recording\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 721,\n                            columnNumber: 31\n                          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                            style: {\n                              marginLeft: \"10px\"\n                            },\n                            id: \"progressimg\",\n                            src: \"/rec_logo.svg\",\n                            alt: \"flags\",\n                            width: \"10px\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 730,\n                            columnNumber: 31\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 714,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 697,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(Box, {\n                        sx: {\n                          padding: \"0px 20px\"\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                          className: phraseList[i].recordButtonDisplay == \"\" ? \"recstopBtn\" : \"recstopBtnHide\",\n                          id: phraseList[i].box_no,\n                          onClick: e => handleRecordClick(e),\n                          children: [/*#__PURE__*/_jsxDEV(MicNoneIcon, {\n                            className: \"icon-size\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 739,\n                            columnNumber: 31\n                          }, this), \"Record\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 736,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                          className: phraseList[i].stopButtonDisplay == \"\" ? \"recstopBtn\" : \"recstopBtnHide\",\n                          id: phraseList[i].box_no,\n                          onClick: e => handleStopClick(e),\n                          ref: stopRef,\n                          children: [/*#__PURE__*/_jsxDEV(CheckBoxOutlineBlankIcon, {\n                            className: \"icon-size\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 747,\n                            columnNumber: 31\n                          }, this), \"Stop\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 743,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 734,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 694,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 693,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 692,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 691,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: {\n                    md: \"none\",\n                    xs: \"block\"\n                  }\n                },\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  width: \"100%\",\n                  display: phraseList[i].recordBoxDisplay,\n                  children: /*#__PURE__*/_jsxDEV(Paper, {\n                    sx: {\n                      border: \"0.75px solid #CB9200\",\n                      background: \"rgba(255, 245, 219, 0.50)\",\n                      boxShadow: \"0px 1px 7px 0px rgba(255, 181, 0, 0.15)\"\n                    },\n                    elevation: 2,\n                    children: /*#__PURE__*/_jsxDEV(Box, {\n                      py: 3.4,\n                      px: 2,\n                      display: \"flex\",\n                      alignItems: \"center\",\n                      justifyContent: \"center\",\n                      sx: {\n                        flexDirection: \"column\"\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"h6\",\n                        component: \"p\",\n                        fontSize: 16,\n                        fontWeight: 600,\n                        children: phraseList[i].phraseText\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 790,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                        sx: {\n                          marginTop: \"20px\"\n                        },\n                        display: phraseList[i].readyGreenTextDisplay,\n                        variant: \"body1\",\n                        component: \"p\",\n                        color: \"green\",\n                        fontSize: 14,\n                        fontWeight: 600,\n                        children: \"Ready to record!\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 794,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(Box, {\n                        sx: {\n                          marginTop: \"20px\",\n                          display: phraseList[i].recordingRedTextDisplay,\n                          alignItems: \"center\"\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(Typography, {\n                          variant: \"body1\",\n                          component: \"p\",\n                          color: \"red\",\n                          fontSize: 14,\n                          fontWeight: 600,\n                          children: \"Recording\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 813,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                          style: {\n                            marginLeft: \"10px\"\n                          },\n                          id: \"progressimg\",\n                          src: \"/rec_logo.svg\",\n                          alt: \"flags\",\n                          width: \"10px\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 822,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 806,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(BlueButton, {\n                        id: phraseList[i].box_no,\n                        onClick: e => handleRecordClick(e),\n                        sx: {\n                          marginTop: \"20px\",\n                          display: phraseList[i].recordButtonDisplay\n                        },\n                        variant: \"contained\",\n                        startIcon: /*#__PURE__*/_jsxDEV(MicNoneIcon, {\n                          sx: {\n                            fontSize: 40\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 834,\n                          columnNumber: 42\n                        }, this),\n                        children: \"Record\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 826,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(BlueButton, {\n                        ref: stopRef,\n                        id: phraseList[i].box_no,\n                        onClick: e => handleStopClick(e),\n                        sx: {\n                          marginTop: \"20px\",\n                          width: {\n                            display: phraseList[i].stopButtonDisplay\n                          }\n                        },\n                        variant: \"contained\",\n                        startIcon: /*#__PURE__*/_jsxDEV(CheckBoxOutlineBlankIcon, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 850,\n                          columnNumber: 42\n                        }, this),\n                        children: \"Stop\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 839,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 789,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 787,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 786,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 785,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: {\n                    md: \"block\",\n                    xs: \"none\"\n                  }\n                },\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  mb: 5,\n                  display: phraseList[i].completedBoxDisplay,\n                  children: /*#__PURE__*/_jsxDEV(Paper, {\n                    elevation: 3,\n                    children: /*#__PURE__*/_jsxDEV(Box, {\n                      sx: {\n                        display: \"flex\",\n                        flexDirection: \"column\"\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(Box, {\n                        sx: {\n                          padding: \"18px 10px\",\n                          display: \"flex\",\n                          alignItems: \"center\"\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(DoneIcon, {\n                          fontSize: \"small\",\n                          sx: {\n                            mr: 2,\n                            color: \"green\"\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 874,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                          variant: \"h3\",\n                          component: \"p\",\n                          fontSize: 14,\n                          fontWeight: 600,\n                          children: phraseList[i].phraseText\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 878,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 873,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"recboxBtnBox\",\n                        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                          className: \"recboxBtn\",\n                          id: phraseList[i].box_no,\n                          onClick: e => handleListenClick(e),\n                          children: \" Listen\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 884,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                          className: \"recboxBtn\",\n                          id: phraseList[i].box_no,\n                          onClick: e => handleRetryClick(e),\n                          children: \" Retry\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 888,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 883,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n                        sx: {\n                          display: \"none\"\n                        },\n                        variant: \"outlined\",\n                        \"aria-label\": \"outlined button group\",\n                        children: [/*#__PURE__*/_jsxDEV(Button, {\n                          id: phraseList[i].box_no,\n                          onClick: e => handleListenClick(e),\n                          sx: {\n                            px: 9,\n                            py: 1.3\n                          },\n                          children: /*#__PURE__*/_jsxDEV(Typography, {\n                            variant: \"h3\",\n                            component: \"p\",\n                            fontSize: 14,\n                            fontWeight: 600,\n                            children: \"Listen\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 904,\n                            columnNumber: 31\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 898,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(Button, {\n                          id: phraseList[i].box_no,\n                          onClick: e => handleRetryClick(e),\n                          sx: {\n                            px: 9,\n                            py: 1.3\n                          },\n                          children: /*#__PURE__*/_jsxDEV(Typography, {\n                            variant: \"h3\",\n                            component: \"p\",\n                            fontSize: 14,\n                            fontWeight: 600,\n                            children: \"Retry\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 914,\n                            columnNumber: 31\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 909,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 893,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 867,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 866,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 865,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 864,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: {\n                    md: \"none\",\n                    xs: \"block\"\n                  }\n                },\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  width: \"100%\",\n                  mb: 5,\n                  display: phraseList[i].completedBoxDisplay,\n                  children: /*#__PURE__*/_jsxDEV(Paper, {\n                    elevation: 3,\n                    children: /*#__PURE__*/_jsxDEV(Box, {\n                      sx: {\n                        display: \"flex\",\n                        flexDirection: \"column\"\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(Box, {\n                        sx: {\n                          padding: \"18px 10px\",\n                          display: \"flex\",\n                          alignItems: \"center\"\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(DoneIcon, {\n                          fontSize: \"small\",\n                          sx: {\n                            mr: 2,\n                            color: \"green\"\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 936,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                          variant: \"h3\",\n                          component: \"p\",\n                          fontSize: 14,\n                          fontWeight: 600,\n                          children: phraseList[i].phraseText\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 940,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 935,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n                        variant: \"outlined\",\n                        \"aria-label\": \"outlined button group\",\n                        children: [/*#__PURE__*/_jsxDEV(Button, {\n                          id: phraseList[i].box_no,\n                          onClick: e => handleListenClick(e),\n                          sx: {\n                            px: 9,\n                            py: 1.3,\n                            width: \"50%\"\n                          },\n                          children: /*#__PURE__*/_jsxDEV(Typography, {\n                            variant: \"h3\",\n                            component: \"p\",\n                            fontSize: 14,\n                            fontWeight: 600,\n                            children: \"Listen\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 955,\n                            columnNumber: 31\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 949,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(Button, {\n                          id: phraseList[i].box_no,\n                          onClick: e => handleRetryClick(e),\n                          sx: {\n                            px: 9,\n                            py: 1.3,\n                            width: \"50%\"\n                          },\n                          children: /*#__PURE__*/_jsxDEV(Typography, {\n                            variant: \"h3\",\n                            component: \"p\",\n                            fontSize: 14,\n                            fontWeight: 600,\n                            children: \"Retry\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 965,\n                            columnNumber: 31\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 960,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 945,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 928,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 927,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 926,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 925,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                px: 1.9,\n                mt: 5,\n                display: phraseList[i].phraseBoxDisplay,\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  sx: {\n                    color: \"#95a5a6\"\n                  },\n                  variant: \"h3\",\n                  component: \"p\",\n                  fontSize: 14,\n                  fontWeight: 600,\n                  children: phraseList[i].phraseText\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 978,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 977,\n                columnNumber: 19\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 689,\n              columnNumber: 17\n            }, this));\n          }\n          let sub_container = [];\n          if (timerBtnClick !== nextcount) {\n            for (var j = initialCount; j < nextcount; j++) {\n              if (thankyouBtnPos === j && thankyouBtnPos !== 0) {\n                sub_container.push( /*#__PURE__*/_jsxDEV(BlueButton, {\n                  onClick: () => {\n                    if (recordRTC) {\n                      recordRTC.destroy();\n                    }\n                    navigate(\"/\" + params.userId + \"/thankyou\");\n                  },\n                  sx: {\n                    marginTop: \"20px\"\n                  },\n                  variant: \"contained\",\n                  children: \"Thank you\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 998,\n                  columnNumber: 21\n                }, this));\n                break;\n              }\n              sub_container.push(container[j]);\n            }\n          }\n          return sub_container;\n        })()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 684,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 653,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 594,\n    columnNumber: 5\n  }, this);\n}\n_s(Screen3, \"NGwKrwn/v9DnTokeKVu67T96+og=\", false, function () {\n  return [useNavigate, useLocation, useParams];\n});\n_c = Screen3;\nvar _c;\n$RefreshReg$(_c, \"Screen3\");","map":{"version":3,"names":["React","useState","useEffect","useRef","ButtonGroup","Paper","Button","Typography","styled","Box","Modal","useNavigate","useParams","isMobile","browserVersion","MicNoneIcon","CheckBoxOutlineBlankIcon","DoneIcon","axios","platform","RecordRTC","useLocation","data_file","Progressbar_desktop","Progressbar_mobile","CircularProgress","jsxDEV","_jsxDEV","Screen3","_s","navigate","phraseList","setphraseList","name","setName","timerState","settimerState","timerBtnClick","settimerBtnClick","stopRef","isRecording","setIsRecording","audioBlob","setAudioBlob","recordRTC","setRecordRTC","initialCount","setInitialCount","nextcount","setNextCount","fetchNextLoop","setFetchNextLoop","thankyouBtnPos","setthankyouBtnPos","location","params","streamState","setStreamState","Tokenopen","setTokenopen","freeze","setfreeze","progressbarText","setprogressbarText","ms_style","position","top","left","transform","width","bgcolor","border","boxShadow","pt","px","pb","initRecordRTC","audio","video","navigator","mediaDevices","getUserMedia","then","stream","console","log","recorder","type","mimeType","recorderType","StereoAudioRecorder","numberOfAudioChannels","localStorage","removeItem","path_list","pathname","split","camp_val","i","length","hasOwnProperty","getItem","setItem","s3Ref","parseInt","clear","destroy","userId","check_session","phrase_fetched","undefined","JSON","parse","push","recordButtonDisplay","stopButtonDisplay","readyGreenTextDisplay","recordingRedTextDisplay","recordBoxDisplay","completedBoxDisplay","phraseBoxDisplay","phraseText","prevRecorded","blobUrldata","box_no","err","error","interval","setInterval","clearInterval","BlueButton","theme","backgroundColor","padding","color","borderRadius","fontSize","fontWeight","textTransform","strFormat","strIdx","strVal","replace","uploadVoice","box_no1","url","URL","createObjectURL","new_data","map","item","audioBlob1","fetch","r","blob","audiofile","File","formData","FormData","append","post","process","env","REACT_APP_API_IP","headers","response","catch","handleProgressbar","count_val","pb_text","handleRecordClick","e","reset","target","id","prev_data","startRecording","timerID","setTimeout","current","click","handleStopClick","clearTimeout","data","campaign_name","accent","session_id","timestamp","browser","browser_version","device","ms_token_id","ms_token_title","language","new_data1","stopRecording","getBlob","handleRetryClick","next_data","handleListenClick","audio_src","tmp","Audio","play","tokenexpireBtnClick","tokenurl","get","posts","token","children","open","sx","fileName","_jsxFileName","lineNumber","columnNumber","my","onClick","variant","height","display","alignItems","justifyContent","md","xs","maxWidth","src","alt","py","p","component","bar_val","mt","textAlign","container","background","elevation","marginTop","style","marginLeft","className","ref","flexDirection","startIcon","mb","mr","sub_container","j","_c","$RefreshReg$"],"sources":["/home/mayur/stat_code/audio-collection-tools/stryker-campaign-frontend/src/components/Screen3.js"],"sourcesContent":["//\n//  Node.js v18.18.0 npm 10.2.1\n//  File: Screen3.js\n//  Author: Mayur Chavan (GSLab Pvt. Ltd. Pune)\n//  Date: 2023-11-21 18:49:59\n//  Functionality: Launch the stryker's audio data capturing tool application UI.\n//\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport {\n  ButtonGroup,\n  Paper,\n  Button,\n  Typography,\n  styled,\n  Box,\n  Modal,\n} from \"@mui/material\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport {isMobile, browserVersion} from 'react-device-detect';\nimport MicNoneIcon from \"@mui/icons-material/MicNone\";\nimport CheckBoxOutlineBlankIcon from \"@mui/icons-material/CheckBoxOutlineBlank\";\nimport DoneIcon from \"@mui/icons-material/Done\";\nimport axios from \"axios\";\nimport platform from \"platform\";\nimport RecordRTC from 'recordrtc'\nimport { useLocation } from \"react-router-dom\";\nimport data_file from \"../assets/files/config.json\";\nimport Progressbar_desktop from \"./Progressbar_desktop\";\nimport Progressbar_mobile from \"./Progressbar_mobile\";\nimport CircularProgress from '@mui/material/CircularProgress';\n\nexport default function Screen3() {\n  /*\n    Screen3\n    ~~~~~~~~~~~~~~~~~\n    \n    This Component displays all phrase with record button.\n  */    \n  const navigate = useNavigate();\n  const [phraseList, setphraseList] = useState([]);\n  const [name, setName] = useState(\"\");\n  const [timerState, settimerState] = useState(\"\");\n  const [timerBtnClick, settimerBtnClick] = useState(0);\n  const stopRef = useRef(null);\n  const [isRecording, setIsRecording] = useState(false);\n  const [audioBlob, setAudioBlob] = useState(null);\n  const [recordRTC, setRecordRTC] = useState(null);\n  const [initialCount, setInitialCount] = useState(null);\n  const [nextcount, setNextCount] = useState(null);\n  const [fetchNextLoop, setFetchNextLoop] = useState(0);\n  const [thankyouBtnPos, setthankyouBtnPos] = useState(0);\n  const location = useLocation();\n  const params = useParams();\n  const [streamState, setStreamState] = useState(null);\n  const [Tokenopen, setTokenopen] = useState(false);  \n  const [freeze, setfreeze] = useState(false);\n  const [progressbarText, setprogressbarText] = useState(\"Lets Go!\"); \n\n  // style for ms token error message\n  const ms_style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    bgcolor: 'background.paper',\n    border: '2px solid #e74c3c',\n    boxShadow: 24,\n    pt: 2,\n    px: 4,\n    pb: 3,\n  };\n\n  // record RTC variable for recording audio \n  const initRecordRTC = async () => {\n  \n      var params = { audio: true, video: false };\n      await navigator.mediaDevices.getUserMedia(params).then(\n        (stream) => {\n          setStreamState(stream)\n          console.log('Got the stream - ', stream)\n      const recorder = RecordRTC(stream, {\n        type: 'audio',\n        mimeType: 'audio/wav',\n        recorderType: RecordRTC.StereoAudioRecorder,\n        numberOfAudioChannels: 1,\n        //sampleRate: 44100\n      })\n      setRecordRTC(recorder);\n        }\n      )\n    }\n    \n\n  // On initial load\n  useEffect(() => {\n\n    // clear previous screen load VCXP-18045\n    localStorage.removeItem(\"S2_firstLoadDone\")\n\n    // Set initial and next count for showing Recording blocks\n    setInitialCount(0);\n    setNextCount(5);\n\n    // Initialize record RTC for recording audio \n    initRecordRTC();\n\n    // Check campaign key is available in config file \n    // else navigate to 404 page\n    let path_list = location.pathname.split(\"/\");\n    let camp_val = \"\";\n    for (let i = 0; i < path_list.length; i++) {\n      if (data_file.hasOwnProperty(path_list[i])) {\n        camp_val = path_list[i];\n      }\n    }\n  \n    if (camp_val == \"\") {\n      navigate(\"/404\");\n    }\n\n    // On Refresh navigate to screen1 \n    if (localStorage.getItem('S3_firstLoadDone') === null) {\n      // If it's the first load, set the flag in local storage to true and reload the page\n      localStorage.setItem('S3_firstLoadDone', 1);\n      console.log('This is the initial load');\n    } else {\n      let s3Ref = localStorage.getItem(\"S3_firstLoadDone\")\n      localStorage.setItem(\"S3_firstLoadDone\",parseInt(s3Ref) + 1)\n      s3Ref = localStorage.getItem(\"S3_firstLoadDone\")\n      if(s3Ref == 3){\n          localStorage.clear()\n          console.log('This is a page refresh');\n          if(recordRTC){\n            recordRTC.destroy()\n          }      \n        navigate(\"/\" + params.userId )\n      } \n\n    }\n\n    // check session id present in local storage\n    // if not present navigate to screen1 page\n    const check_session = localStorage.getItem('vct_session_id');\n    if(check_session == null){\n      if(recordRTC){\n        recordRTC.destroy()\n      }      \n      // navigate(\"/\" + params.userId)\n    }\n\n    // Set the browser name\n    setName(platform.name);\n\n    // Get Phrase list from loal storage\n    let phrase_fetched = [];\n    try {\n      if(localStorage.getItem(\"vct_phrase_list\") !== undefined){\n        phrase_fetched = JSON.parse(localStorage.getItem(\"vct_phrase_list\"));\n      } else {\n        for (let i = 0; i < 50; i++){\n          phrase_fetched.push(\"\")\n        }\n      }\n      \n      // Create list of object for each phrase\n      // Object containing values for displaying and hiding the view\n      if(localStorage.getItem(\"vct_phrase_list\") !== undefined){\n        //Runs only on the first render\n        for (let i = 0; i < 50; i++) {\n          if (i === 0) {\n            phraseList.push({\n              recordButtonDisplay: \"\",\n              stopButtonDisplay: \"none\",\n              readyGreenTextDisplay: \"\",\n              recordingRedTextDisplay: \"none\",\n              recordBoxDisplay: \"inline-block\",\n              completedBoxDisplay: \"none\",\n              phraseBoxDisplay: \"none\",\n              phraseText: phrase_fetched[i],\n              prevRecorded: false,\n              blobUrldata: \"\",\n              box_no: i,\n            });\n          } else {\n            phraseList.push({\n              recordButtonDisplay: \"none\",\n              stopButtonDisplay: \"none\",\n              readyGreenTextDisplay: \"none\",\n              recordingRedTextDisplay: \"none\",\n              recordBoxDisplay: \"none\",\n              completedBoxDisplay: \"none\",\n              phraseBoxDisplay: \"\",\n              phraseText: phrase_fetched[i],\n              prevRecorded: false,\n              blobUrldata: \"\",\n              box_no: i,\n            });\n          }\n        }        \n      \n      }\n\n      // set state of phraselist\n      setphraseList([...phraseList, phraseList]);\n\n    } catch (err) {\n      // handle exception\n      console.error(\"An error occurred:\", err);\n    }\n\n    // Get no_of_phrases from local storage\n    // Set thank you button position  \n    setthankyouBtnPos(parseInt(localStorage.getItem(\"no_of_phrases\")))\n\n    // set timer for token \n    const interval = setInterval(() => {\n      setTokenopen(true);\n    }, 1200000); //20*60 = 1200s =1200000ms\n    return () => clearInterval(interval);\n  }, []);\n\n  // CSS styling for button\n  const BlueButton = styled(Button)(({ theme }) => ({\n    // backgroundColor: theme.palette.primary.main,\n    backgroundColor: \"#ffb500\",\n    padding: \"10px 15px\",\n    color: \"black\",\n    borderRadius: 40,\n    fontSize: 16,\n    fontWeight: 600,\n    boxShadow: \"0px 4px 16px 0px rgba(0, 0, 0, 0.16)\",\n    textTransform: \"capitalize\",\n    \"&:hover\": {\n      backgroundColor: \"#F79F1F\",\n    },\n    \"&:disabled\": {\n      backgroundColor: \"gray\",\n      color: \"white\",\n    },\n  }));\n\n  // \n  React.useEffect(() => {\n    function strFormat(strIdx) {\n      var strVal = JSON.parse(localStorage.getItem(\"vct_phrase_list\"));\n      strVal = strVal[strIdx].replace(/[^a-zA-Z0-9 ]/g, \"\");\n      strVal = strVal.replace(/ /g, \"_\");\n      return (strIdx + 1) + \"_\" + strVal;\n    }\n\n    async function uploadVoice() {\n      // get curr idx, phrase\n      const box_no1 = timerBtnClick;\n\n      let url;\n      if (audioBlob) {\n        url = URL.createObjectURL(audioBlob);\n      }\n\n        // store blob in blobval key in object\n        const new_data = phraseList.map((item) =>\n        item.box_no === box_no1 ? { ...item, blobUrldata: url } : item\n      );\n      setphraseList(new_data);\n      const audioBlob1 = await fetch(url).then((r) => r.blob());\n      const audiofile = new File([audioBlob1], \"audiofile.mp3\", {\n        type: \"audio/mpeg\",\n      });\n\n      const formData = new FormData();\n      formData.append(\"audio_data\", audiofile);\n\n      await axios\n        .post(\n            process.env.REACT_APP_API_IP + \"/api/v1/campaign/\" +\n            // \"https://stryker-audio-collection-api.tools.np.vocera.io/api/v1/campaign/\" +\n            localStorage.getItem(\"vct_campaign\") +\n            \"/\" +\n            localStorage.getItem(\"vct_session_id\") +\n            \"/audiofile?phrase_str=\" +\n            strFormat(box_no1),\n          formData,\n          {\n            headers: {\n              \"content-type\": \"multipart/form-data\",\n              'Access-Control-Allow-Origin': '*', \n              'Access-Control-Allow-Methods': 'POST, PUT, PATCH, GET, DELETE, OPTIONS',             \n              'Access-Control-Allow-Headers': '*',\n              'Access-Control-Allow-Credentials': true,            \n              'Authorization': `Bearer ${localStorage.getItem(\"vct_token\")}`\n            },\n          }\n        )\n        .then(function (response) {\n          console.log(response);\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    }\n    if (audioBlob) {\n      uploadVoice();\n    }\n  }, [audioBlob]);\n\n\n  const handleProgressbar = (count_val) => {\n\n    // set progress bar text\n    const pb_text = [\"Lets Go!\", \"Good Going!\", \"Excellent!\", \"Nearly There!\",\"Last 10 to go!\", \"Done!\"];\n    \n    if((parseInt(count_val) >= 0) && (parseInt(count_val) < 10)){\n      setprogressbarText(pb_text[0]) //Lets Go!\n    }\n\n    if((parseInt(count_val) >= 10) && (parseInt(count_val) < 20)){\n      setprogressbarText(pb_text[1]) //Good Going!\n    }\n\n    if((parseInt(count_val) >= 20) && (parseInt(count_val) < 30)){\n      setprogressbarText(pb_text[2]) //Excellent!\n    }\n    \n    if((parseInt(count_val) >= 30) && (parseInt(count_val) < 40)){\n      setprogressbarText(pb_text[3]) //Nearly There!\n    }\n\n    if((parseInt(count_val) >= 40) && (parseInt(count_val) < 49)){\n      setprogressbarText(pb_text[4]) //Last 10 to go!\n    }\n\n    if(parseInt(count_val) === 49){\n      setprogressbarText(pb_text[5]) //Done!\n    }\n\n  };\n\n  // start recording\n  const handleRecordClick = (e) => {\n    // console.log(timerBtnClick)\n\n    if(recordRTC){\n      recordRTC.reset()\n    }\n\n    localStorage.setItem(\"vct_curr_box\", e.target.id);\n\n    const new_data = phraseList.map((item) =>\n      item.box_no === parseInt(e.target.id)\n        ? {\n            ...item,\n            recordButtonDisplay: \"none\",\n            stopButtonDisplay: \"\",\n            readyGreenTextDisplay: \"none\",\n            recordingRedTextDisplay: \"flex\",\n          }\n        : item\n    );\n\n    if (parseInt(e.target.id) >= 1) {\n      const prev_data = new_data.map((item) =>\n        item.box_no === parseInt(e.target.id) - 1\n          ? { ...item, recordBoxDisplay: \"none\", completedBoxDisplay: \"none\" }\n          : item\n      );\n\n      setphraseList(prev_data);\n    } else {\n      setphraseList(new_data);\n    }\n\n    // startRecording();\n    if (recordRTC) {\n      recordRTC.startRecording();\n      setIsRecording(true);\n    }\n\n    const timerID = setTimeout(() => {\n      stopRef.current.click();\n    }, 10000); //miliseconds\n\n    settimerState(timerID)\n    // get id (int of block)\n    settimerBtnClick(parseInt(e.target.id))\n\n    // Progress bar count\n    handleProgressbar(parseInt(e.target.id));\n\n  };\n\n  // stop recording\n  async function handleStopClick(e) {\n\n    setFetchNextLoop(timerBtnClick + 1);\n    // console.log('firstTime - ', fetchNextLoop)\n    if ((timerBtnClick - (timerBtnClick%4)) !== initialCount)\n    {if(timerBtnClick === nextcount){\n      \n        setInitialCount(initialCount);\n        setNextCount(nextcount);\n      }\n      else{\n\n        if(timerBtnClick !== initialCount){\n          if((timerBtnClick+1) % 5 == 0){\n            setInitialCount(initialCount + 4);\n            setNextCount(nextcount + 5);\n          }\n        }\n\n      }}\n  \n\n    clearTimeout(timerState)\n\n    // If First phrase send metadata json\n    if (timerBtnClick === 0) {\n      const data = {\n        campaign_name: params.userId,\n        accent: localStorage.getItem(\"vct_accent_value\"),\n        session_id: localStorage.getItem(\"vct_session_id\"),\n        timestamp: localStorage.getItem(\"vct_curr_date\") + \" \" + localStorage.getItem(\"vct_curr_time\"),\n        browser: name,\n        browser_version: browserVersion,\n        device: isMobile ? 'mobile' : 'desktop',\n        ms_token_id: localStorage.getItem(\"vct_ms_token\"),\n        ms_token_title: localStorage.getItem(\"vct_ms_token_title\"),\n        language : \"English\"\n      };\n\n      //1. post meta-json file to server\n      axios\n        .post(\n          process.env.REACT_APP_API_IP + \"/api/v1/campaign/\" +\n          // \"https://stryker-audio-collection-api.tools.np.vocera.io/api/v1/campaign/\" +\n            localStorage.getItem(\"vct_campaign\") +\n            \"/\" +\n            localStorage.getItem(\"vct_session_id\") +\n            \"/metadata\",\n          data,\n          {\n            headers: {\n              'Content-Type': 'application/json',\n              'Access-Control-Allow-Origin': '*', \n              'Access-Control-Allow-Methods': 'POST, PUT, PATCH, GET, DELETE, OPTIONS',             \n              'Access-Control-Allow-Headers': '*',\n              'Access-Control-Allow-Credentials': true,\n              'Authorization': `Bearer ${localStorage.getItem(\"vct_token\")}`\n            },\n          }\n        )\n        .then(function (response) {\n          console.log(response);\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    }\n\n    const new_data1 = phraseList.map((item) =>\n      item.box_no === timerBtnClick\n        ? {\n            ...item,\n            recordBoxDisplay: \"none\",\n            completedBoxDisplay: \"inline-block\",\n            prevRecorded: true,\n          }\n        : item\n    );\n\n    // Until count not moves to last recording box\n    if (timerBtnClick !== 49) {\n      const new_data = new_data1.map((item) =>\n        item.box_no === timerBtnClick + 1\n          ? {\n              ...item,\n              recordBoxDisplay: \"inline-block\",\n              recordButtonDisplay: \"\",\n              readyGreenTextDisplay: \"\",\n              phraseBoxDisplay: \"none\",\n            }\n          : item\n      );\n\n      setphraseList(new_data);\n    } else {\n      setphraseList(new_data1);\n    }\n\n    // stopRecording();\n    if (recordRTC) {\n      recordRTC.stopRecording(() => {\n        const blob = recordRTC.getBlob();\n        setAudioBlob(blob);\n        setIsRecording(false);\n      });\n    }\n\n    localStorage.setItem(\"vct_curr_box\",timerBtnClick)\n  }\n\n  // retry recording and set CSS of that phrase box\n  const handleRetryClick = (e) => {\n    settimerBtnClick(parseInt(e.target.id))\n  \n    // progress bar count\n    handleProgressbar(parseInt(e.target.id));\n    \n    const new_data = phraseList.map((item) =>\n      item.box_no === parseInt(e.target.id)\n        ? {\n            ...item,\n            recordBoxDisplay: \"inline-block\",\n            recordButtonDisplay: \"\",\n            stopButtonDisplay: \"none\",\n            readyGreenTextDisplay: \"\",\n            recordingRedTextDisplay: \"none\",\n            completedBoxDisplay: \"none\",\n            phraseBoxDisplay: \"none\",\n          }\n        : item\n    );\n\n    const next_data = new_data.map((item) =>\n      item.box_no === parseInt(e.target.id) + 1\n        ? {\n            ...item,\n            recordBoxDisplay: \"none\",\n            completedBoxDisplay: \"none\",\n            phraseBoxDisplay: \"\",\n          }\n        : item\n    );\n\n    setphraseList(next_data);\n  };\n\n  // listen recording\n  const handleListenClick = (e) => {\n\n    const audio_src = phraseList[parseInt(e.target.id)].blobUrldata\n    // // const audio_src = phraseList[timerBtnClick].blobUrldata\n    const tmp = new Audio(audio_src); \n    tmp.play()  \n  };\n\n\n  //tokenexpireBtnClick button click gte new bearer token\n  const tokenexpireBtnClick = () => {\n\n    // when button clicked\n    // hide token error model\n    setTokenopen(false)\n\n    // show circular modal\n    setfreeze(true)\n\n    // API for getting JWT token\n    var tokenurl =\n      process.env.REACT_APP_API_IP + \"/api/v1/campaign/\" +\n      // \"https://stryker-audio-collection-api.tools.np.vocera.io/api/v1/campaign/\" +\n      localStorage.getItem(\"vct_session_id\") +\n      \"/auth\";\n    axios\n      .get(tokenurl, \n        {\n          headers: {\n              'Content-Type': 'application/json',\n              'Access-Control-Allow-Origin': '*', \n              'Access-Control-Allow-Methods': 'POST, PUT, PATCH, GET, DELETE, OPTIONS',             \n              'Access-Control-Allow-Headers': '*',\n              'Access-Control-Allow-Credentials': true\n          },\n        })\n      .then((response) => {\n        // As soon as JWT  token received \n        // extract token and set local storage\n        const posts = response.data;\n        localStorage.setItem(\"vct_token\", posts.token);\n\n        // hide circular model\n        setfreeze(false)   \n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  \n  };\n\n \n  return (\n    <Box>\n\n      {/* modal for token expiration */}\n      <Modal\n        open={Tokenopen}\n        aria-labelledby=\"parent-modal-title\"\n        aria-describedby=\"parent-modal-description\"\n      >\n        <Box sx={{ ...ms_style, width: 400 }}>\n          <h2 id=\"parent-modal-title\">Error message</h2>\n\n          <Box my={1}>\n            <p id=\"parent-modal-description\">\n              Session Expired. Please click OK button to renew session.\n            </p>\n          </Box>\n\n          <Button   \n            onClick={tokenexpireBtnClick} \n            variant=\"outlined\">OK</Button>\n        </Box>\n      </Modal>\n\n\n\n      {/* Circular loader view when submit button clicked */}\n      <Modal \n        open={freeze}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <Box width=\"100vw\" height=\"100vh\" display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\n          <CircularProgress />\n        </Box>\n      </Modal>\n\n      {/* mobile view */}\n      <Box\n        sx={{ display: { md: \"none\", xs: \"block\" }  }}\n      >\n        <Box px={2.5} pt={2.5} maxWidth={1370}>\n          <Box>\n            <img src=\"/logo1.png\" alt=\"stryker logo\" width=\"114px\" height=\"34px\" />\n          </Box>\n        </Box>  \n      </Box>\n\n      {/* desktop view */}\n      <Box\n        sx={{ display: { md: \"block\", xs: \"none\" }, boxShadow: \"0px 4px 16px 0px rgba(0, 0, 0, 0.16)\"  }}\n        bgcolor=\"#ffb500\"\n      >\n        <Box px={5} py={2.6} maxWidth={1370}>\n          <Box>\n            <img src=\"/logo1.png\" alt=\"stryker logo\" width=\"148px\" height=\"44px\" />\n          </Box>\n        </Box>  \n      </Box>\n\n      <Box p={5} maxWidth={1370}>\n        {/* Desktop progress bar */}\n        <Box sx={{ display: { md: \"block\", xs: \"none\" }}}>\n          < Typography variant=\"body1\" component=\"p\" fontSize={18} fontWeight={800} color={\"#ffb500\"}>\n              {progressbarText}\n          </Typography>\n          <Progressbar_desktop bar_val={timerBtnClick}/>\n        </Box>\n\n        {/* mobile view progress bar */}\n        <Box sx={{ display: { md: \"none\", xs: \"block\" }}}>\n          <Progressbar_mobile bar_val={timerBtnClick}/>\n          < Typography variant=\"body1\" component=\"p\" fontSize={18} fontWeight={800} color={\"#ffb500\"}>\n              {progressbarText}\n          </Typography>          \n        </Box>\n\n        {/* desktop texttext */}\n        <Box mt={5} sx={{ display: { md: \"block\", xs: \"none\" } }}>\n          <Typography variant=\"body1\" component=\"p\" fontSize={16} fontWeight={500}>\n          Press the record button and say the highlighted phrase. If the phrase contains words that have spaces, please spell the word. <br/> For example, \"N I C U\" should be pronounced letter by letter.\n          </Typography>\n        </Box>\n\n        {/* mobile texttext */}\n        <Box mt={5} sx={{ display: { md: \"none\", xs: \"block\" } }}>\n          <Typography textAlign={\"center\"} variant=\"body1\" component=\"p\" fontSize={16} fontWeight={500}>\n          Press the record button and say the highlighted phrase. If the phrase contains words that have spaces, please spell the word. <br/> For example, \"N I C U\" should be pronounced letter by letter.\n          </Typography>\n        </Box>\n\n        <Box mt={5}>\n          {(() => {\n            let container = [];\n            for (var i = 0; i < phraseList.length - 1; i++) {\n              container.push(\n                <Box key={i}>\n                  {/* 1 ================ desktop recording box======================== */}\n                  <Box sx={{display: { md: \"block\", xs: \"none\" }}}>\n                    <Box display={phraseList[i].recordBoxDisplay}>\n                      <Paper sx={{border: \"0.75px solid #CB9200\", background: \"rgba(255, 245, 219, 0.50)\", boxShadow: \"0px 1px 7px 0px rgba(255, 181, 0, 0.15)\"}} elevation={2}>\n                        <Box\n                          sx={{ display: \"flex\", alignItems: \"center\" }}\n                        >\n                          <Box px={5} py={2.3}>\n                            <Typography variant=\"h6\" component=\"p\" fontSize={16} fontWeight={600}>\n                              {phraseList[i].phraseText} \n                            </Typography>\n\n                            <Typography\n                              sx={{marginTop:\"10px\"}}\n                              display={phraseList[i].readyGreenTextDisplay}\n                              variant=\"body1\"\n                              component=\"p\"\n                              color=\"green\"\n                              fontSize={14}\n                              fontWeight={600}\n                            >\n                              Ready to record!\n                            </Typography>\n\n                            <Box\n                              sx={{\n                                marginTop:\"10px\",\n                                display: phraseList[i].recordingRedTextDisplay,\n                                alignItems: \"center\",\n                              }}\n                            >\n                              <Typography\n                                variant=\"body1\"\n                                component=\"p\"\n                                color=\"red\"\n                                fontSize={14}\n                                fontWeight={600}\n                              >\n                                Recording\n                              </Typography>\n                              <img style={{marginLeft:\"10px\"}} id=\"progressimg\" src=\"/rec_logo.svg\" alt=\"flags\" width=\"10px\"/>\n                            </Box>\n                          </Box>\n\n                          <Box sx={{padding: \"0px 20px\"}}>\n\n                            <button className={phraseList[i].recordButtonDisplay == \"\" ? \"recstopBtn\" : \"recstopBtnHide\"}  id={phraseList[i].box_no}\n                                onClick={(e) => handleRecordClick(e)}\n                              > \n                              <MicNoneIcon className=\"icon-size\" />\n                              Record\n                            </button>\n\n                            <button className={phraseList[i].stopButtonDisplay == \"\" ? \"recstopBtn\" : \"recstopBtnHide\"} id={phraseList[i].box_no}\n                                onClick={(e) => handleStopClick(e)}\n                                ref={stopRef}\n                              > \n                              <CheckBoxOutlineBlankIcon className=\"icon-size\" />\n                              Stop\n                            </button>\n\n                            {/* <BlueButton\n                              id={phraseList[i].box_no}\n                              onClick={(e) => handleRecordClick(e)}\n                              sx={{\n                                display: phraseList[i].recordButtonDisplay,\n                              }}\n                              variant=\"contained\"\n                              startIcon={<MicNoneIcon sx={{ fontSize: 40 }} />}\n                            >\n                              Record\n                            </BlueButton>\n\n                            <BlueButton\n                              ref={stopRef}\n                              id={phraseList[i].box_no}\n                              onClick={(e) => handleStopClick(e)}\n                              sx={{\n                                width: {\n                                  display: phraseList[i].stopButtonDisplay,\n                                },\n                              }}\n                              variant=\"contained\"\n                              startIcon={<CheckBoxOutlineBlankIcon />}\n                            >\n                              Stop\n                            </BlueButton> */}\n                          </Box>\n                        </Box>\n                      </Paper>\n                    </Box>\n                  </Box>\n\n\n                  {/* 1 ================ mobile recording box======================== */}\n                  <Box sx={{display: { md: \"none\", xs: \"block\" }}}>\n                    <Box width=\"100%\" display={phraseList[i].recordBoxDisplay}>\n                      <Paper sx={{border: \"0.75px solid #CB9200\", background: \"rgba(255, 245, 219, 0.50)\", boxShadow: \"0px 1px 7px 0px rgba(255, 181, 0, 0.15)\"}} elevation={2}>\n\n                          <Box py={3.4} px={2} display={\"flex\"} alignItems={\"center\"} justifyContent={\"center\"} sx={{flexDirection: \"column\"}}>\n                            <Typography variant=\"h6\" component=\"p\" fontSize={16} fontWeight={600}>\n                              {phraseList[i].phraseText}\n                            </Typography>\n\n                            <Typography\n                              sx={{marginTop:\"20px\"}}\n                              display={phraseList[i].readyGreenTextDisplay}\n                              variant=\"body1\"\n                              component=\"p\"\n                              color=\"green\"\n                              fontSize={14}\n                              fontWeight={600}\n                            >\n                              Ready to record!\n                            </Typography>\n\n                            <Box\n                              sx={{\n                                marginTop:\"20px\",\n                                display: phraseList[i].recordingRedTextDisplay,\n                                alignItems: \"center\",\n                              }}\n                            >\n                              <Typography\n                                variant=\"body1\"\n                                component=\"p\"\n                                color=\"red\"\n                                fontSize={14}\n                                fontWeight={600}\n                              >\n                                Recording\n                              </Typography>\n                              <img style={{marginLeft:\"10px\"}} id=\"progressimg\" src=\"/rec_logo.svg\" alt=\"flags\" width=\"10px\"/>\n                            </Box>\n\n\n                            <BlueButton\n                              id={phraseList[i].box_no}\n                              onClick={(e) => handleRecordClick(e)}\n                              sx={{\n                                marginTop:\"20px\",\n                                display: phraseList[i].recordButtonDisplay,\n                              }}\n                              variant=\"contained\"\n                              startIcon={<MicNoneIcon sx={{ fontSize: 40 }} />}\n                            >\n                              Record\n                            </BlueButton>\n\n                            <BlueButton\n                              ref={stopRef}\n                              id={phraseList[i].box_no}\n                              onClick={(e) => handleStopClick(e)}\n                              sx={{\n                                marginTop:\"20px\",\n                                width: {\n                                  display: phraseList[i].stopButtonDisplay,\n                                },\n                              }}\n                              variant=\"contained\"\n                              startIcon={<CheckBoxOutlineBlankIcon />}\n                            >\n                              Stop\n                            </BlueButton>\n\n                          </Box>\n\n                      </Paper>\n                    </Box>\n                  </Box>\n\n\n\n                  {/* 2 ================desktop recording box======================== */}\n                  <Box sx={{display: { md: \"block\", xs: \"none\" }}}>\n                    <Box  mb={5} display={phraseList[i].completedBoxDisplay}>\n                      <Paper elevation={3} >\n                        <Box\n                          sx={{\n                            display: \"flex\",\n                            flexDirection: \"column\",\n                          }}\n                        >\n                          <Box sx={{ padding: \"18px 10px\", display: \"flex\", alignItems: \"center\" }}>\n                            <DoneIcon\n                              fontSize=\"small\"\n                              sx={{ mr: 2, color: \"green\" }}\n                            />\n                            <Typography variant=\"h3\" component=\"p\" fontSize={14} fontWeight={600}>\n                              {phraseList[i].phraseText}\n                            </Typography>\n                          </Box>\n\n                          <div className=\"recboxBtnBox\">\n                            <button className=\"recboxBtn\" id={phraseList[i].box_no}\n                                onClick={(e) => handleListenClick(e)}\n                              > Listen\n                            </button>\n                            <button className=\"recboxBtn\" id={phraseList[i].box_no}\n                                onClick={(e) => handleRetryClick(e)}\n                              > Retry\n                            </button>\n                          </div>\n                          <ButtonGroup\n                          sx={{display:\"none\"}}\n                            variant=\"outlined\"\n                            aria-label=\"outlined button group\"\n                          >\n                            <Button\n                              id={phraseList[i].box_no}\n                              onClick={(e) => handleListenClick(e)}\n                              sx={{ px: 9, py: 1.3 }}\n                            >\n                        \n                              <Typography variant=\"h3\" component=\"p\" fontSize={14} fontWeight={600}>\n                                Listen\n                              </Typography>\n                            </Button>\n\n                            <Button\n                              id={phraseList[i].box_no}\n                              onClick={(e) => handleRetryClick(e)}\n                              sx={{ px: 9, py: 1.3 }}\n                            > \n                              <Typography variant=\"h3\" component=\"p\" fontSize={14} fontWeight={600}>\n                                Retry\n                              </Typography>\n                            </Button>\n                          </ButtonGroup>\n                        </Box>\n                      </Paper>\n                    </Box>\n                  </Box>\n\n                  {/* 2 ================mobile recording box======================== */}\n                  <Box sx={{display: { md: \"none\", xs: \"block\" }}}>\n                    <Box width=\"100%\" mb={5} display={phraseList[i].completedBoxDisplay}>\n                      <Paper elevation={3} >\n                        <Box\n                          sx={{\n                            display: \"flex\",\n                            flexDirection: \"column\",\n                          }}\n                        >\n\n                          <Box sx={{ padding: \"18px 10px\", display: \"flex\", alignItems: \"center\" }}>\n                            <DoneIcon\n                              fontSize=\"small\"\n                              sx={{ mr: 2, color: \"green\" }}\n                            />\n                            <Typography variant=\"h3\" component=\"p\" fontSize={14} fontWeight={600}>\n                              {phraseList[i].phraseText}\n                            </Typography>\n                          </Box>\n\n                          <ButtonGroup\n                            variant=\"outlined\"\n                            aria-label=\"outlined button group\"\n                          >\n                            <Button\n                              id={phraseList[i].box_no}\n                              onClick={(e) => handleListenClick(e)}\n                              sx={{ px: 9, py: 1.3, width:\"50%\" }}\n                            >\n                              \n                              <Typography variant=\"h3\" component=\"p\" fontSize={14} fontWeight={600}>\n                                Listen\n                              </Typography>\n                            </Button>\n\n                            <Button\n                              id={phraseList[i].box_no}\n                              onClick={(e) => handleRetryClick(e)}\n                              sx={{ px: 9, py: 1.3, width:\"50%\" }}\n                            > \n                              <Typography variant=\"h3\" component=\"p\" fontSize={14} fontWeight={600}>\n                                Retry\n                              </Typography>\n                            </Button>\n                          </ButtonGroup>\n                        </Box>\n                      </Paper>\n                    </Box>\n                  </Box>\n\n\n                  {/* 3 ================phrase text======================== */}\n                  <Box px={1.9} mt={5} display={phraseList[i].phraseBoxDisplay}>\n                    <Typography\n                      sx={{ color: \"#95a5a6\" }}\n                      variant=\"h3\"\n                      component=\"p\"\n                      fontSize={14}\n                      fontWeight={600}\n                    >\n                     {phraseList[i].phraseText}\n                    </Typography>\n                  </Box>\n                </Box>\n              );\n            }\n\n            let sub_container = [];\n\n            if(timerBtnClick !== nextcount){\n              for(var j=initialCount; j<nextcount; j++){\n                if((thankyouBtnPos === j) && (thankyouBtnPos !==0)){\n                  sub_container.push(\n                    <BlueButton\n                    onClick={() => {\n                      if(recordRTC){\n                        recordRTC.destroy()\n                      }\n                      navigate(\"/\" + params.userId + \"/thankyou\")\n                      } }\n                    sx={{\n                      marginTop:\"20px\",\n                    }}\n                    variant=\"contained\"\n                  >\n                    Thank you\n                  </BlueButton>\n                  );\n                  break\n                }\n                sub_container.push(container[j]);\n              }\n            } \n\n            return sub_container;\n          })()}          \n        </Box>\n      </Box>\n    </Box>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}