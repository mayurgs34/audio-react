{"ast":null,"code":"var _jsxFileName = \"/home/mayur/stat_code/audio-collection-tools/stryker-campaign-frontend/src/components/records.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport RecordRTC from 'recordrtc';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RecordAudio = () => {\n  _s();\n  const [isRecording, setIsRecording] = useState(false);\n  const [audioBlob, setAudioBlob] = useState(null);\n  const [recordRTC, setRecordRTC] = useState(null);\n  const [recordRTCstate, setRecordRTCstate] = useState(null);\n  useEffect(() => {\n    const initRecordRTC = async () => {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          audio: true\n        });\n        const recorder = RecordRTC(stream, {\n          type: 'audio',\n          mimeType: 'audio/wav',\n          recorderType: RecordRTC.StereoAudioRecorder,\n          numberOfAudioChannels: 1\n        });\n        setRecordRTC(recorder);\n      } catch (error) {\n        console.error('Error accessing microphone:', error);\n      }\n    };\n    initRecordRTC();\n  }, []);\n  const startRecording = () => {\n    if (recordRTC) {\n      recordRTC.startRecording();\n      setIsRecording(true);\n    }\n  };\n  const stopRecording = () => {\n    if (recordRTC) {\n      recordRTC.stopRecording(() => {\n        const blob = recordRTC.getBlob();\n        setAudioBlob(blob);\n        setIsRecording(false);\n      });\n    }\n    setRecordRTCstate(recordRTCstate + 1);\n    location.reload();\n  };\n  const saveRecording = () => {\n    if (audioBlob) {\n      const url = URL.createObjectURL(audioBlob);\n      const a = document.createElement('a');\n      document.body.appendChild(a);\n      a.style = 'display: none';\n      a.href = url;\n      a.download = 'recordedAudio.wav';\n      a.click();\n      window.URL.revokeObjectURL(url);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startRecording,\n      disabled: isRecording,\n      children: \"Start Recording\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: stopRecording,\n      disabled: !isRecording,\n      children: \"Stop Recording\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: saveRecording,\n      disabled: !audioBlob,\n      children: \"Save Recording\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), audioBlob && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"audio\", {\n        controls: true,\n        children: /*#__PURE__*/_jsxDEV(\"source\", {\n          src: URL.createObjectURL(audioBlob),\n          type: \"audio/wav\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(RecordAudio, \"NFcyIesZ2659hV86bE6epwEbpJI=\");\n_c = RecordAudio;\nexport default RecordAudio;\nvar _c;\n$RefreshReg$(_c, \"RecordAudio\");","map":{"version":3,"names":["React","useState","useEffect","RecordRTC","jsxDEV","_jsxDEV","RecordAudio","_s","isRecording","setIsRecording","audioBlob","setAudioBlob","recordRTC","setRecordRTC","recordRTCstate","setRecordRTCstate","initRecordRTC","stream","navigator","mediaDevices","getUserMedia","audio","recorder","type","mimeType","recorderType","StereoAudioRecorder","numberOfAudioChannels","error","console","startRecording","stopRecording","blob","getBlob","location","reload","saveRecording","url","URL","createObjectURL","a","document","createElement","body","appendChild","style","href","download","click","window","revokeObjectURL","children","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","controls","src","_c","$RefreshReg$"],"sources":["/home/mayur/stat_code/audio-collection-tools/stryker-campaign-frontend/src/components/records.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport RecordRTC from 'recordrtc';\n\nconst RecordAudio = () => {\n  const [isRecording, setIsRecording] = useState(false);\n  const [audioBlob, setAudioBlob] = useState(null);\n  const [recordRTC, setRecordRTC] = useState(null);\n  const [recordRTCstate, setRecordRTCstate] = useState(null);\n\n\n\n  useEffect(() => {\n    const initRecordRTC = async () => {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n        const recorder = RecordRTC(stream, {\n          type: 'audio',\n          mimeType: 'audio/wav',\n          recorderType: RecordRTC.StereoAudioRecorder,\n          numberOfAudioChannels: 1,\n        });\n        setRecordRTC(recorder);\n      } catch (error) {\n        console.error('Error accessing microphone:', error);\n      }\n    };\n\n    initRecordRTC();\n  }, []);\n\n  const startRecording = () => {\n    if (recordRTC) {\n      recordRTC.startRecording();\n      setIsRecording(true);\n    }\n  };\n\n  const stopRecording = () => {\n\n    if (recordRTC) {\n      recordRTC.stopRecording(() => {\n        const blob = recordRTC.getBlob();\n        setAudioBlob(blob);\n        setIsRecording(false);\n      });\n    }\n\n    setRecordRTCstate(recordRTCstate + 1)\n    location.reload()\n  };\n\n  const saveRecording = () => {\n    if (audioBlob) {\n      const url = URL.createObjectURL(audioBlob);\n      const a = document.createElement('a');\n      document.body.appendChild(a);\n      a.style = 'display: none';\n      a.href = url;\n      a.download = 'recordedAudio.wav';\n      a.click();\n      window.URL.revokeObjectURL(url);\n    }\n  };\n\n  return (\n    <div>\n      <button onClick={startRecording} disabled={isRecording}>\n        Start Recording\n      </button>\n      <button onClick={stopRecording} disabled={!isRecording}>\n        Stop Recording\n      </button>\n      <button onClick={saveRecording} disabled={!audioBlob}>\n        Save Recording\n      </button>\n      {audioBlob && (\n        <div>\n          <audio controls>\n            <source src={URL.createObjectURL(audioBlob)} type=\"audio/wav\" />\n          </audio>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default RecordAudio;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}